version: '3'
services:
  api:
    build:
      context: ./aoi
    container_name: ${API_CONTAINER_NAME}
    ports:
      - "8080:80"
    volumes:
      - ./api/:/var/www/api
    environment:
      API_SERVER_NAME: ${API_SERVER_NAME}
      POSTGRESQL_CONTAINER_NAME: ${API_CONTAINER_NAME}
    networks:
      - back
  app:
    build:
      context: ./app
    container_name: ${APP_CONTAINER_NAME}
    ports:
      - "80:80"
    volumes:
      - ./app/dist/:/var/www/html
    environment:
      APP_SERVER_NAME: ${APP_SERVER_NAME}
      API_SERVER_NAME: ${API_SERVER_NAME}
      API_CONTAINER_NAME: ${API_CONTAINER_NAME}
    command: /bin/bash -c "envsubst '$$APP_SERVER_NAME $$API_CONTAINER_NAME $$API_SERVER_NAME' < /etc/nginx/conf.d/app.template > /etc/nginx/conf.d/app.conf && nginx -g 'daemon off;'"
    networks:
      - front
      - back
  postgresql:
    image: postgres:latest
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgresql/:/var/lib/postgresql/data
    networks:
      - back
networks:
  front:
    driver: "bridge"
  back:
driver: "bridge".
